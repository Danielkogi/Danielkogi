# -*- coding: utf-8 -*-
"""Copy of Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fQbEKSaqPCWLwP6HGutdmBeYkRanEgzD
"""

import json
import urllib.request
import requests
import pandas
import pandas as pd
url="https://raw.githubusercontent.com/onaio/ona-tech/master/data/water_points.json"

#Defining the class
class waterPoints:
  def __init__(self,url):
    # Read data from the url
    self.url= urllib.request.urlopen(str(url))
    # Read data into a pandas daraframe.
    self.df = pd.read_json( self.url.read())
    # Filter the umber of functional water points
    self.functional =self.df['water_point_condition'][self.df['water_point_condition'] =="functioning"] 
    
   # functional
  def functional_water_points (self):
    print("number_functional: " , self.functional.size)

  #water points per community
  def wps_community (self):
    wp= self.df.groupby("communities_villages").size().reset_index()
    self.wp_df= wp.rename(columns ={0:"water_points_per_community"})
    print()
    print("number_water_points: ")
    print(self.wp_df)

  #Rank communities
  def broken_water_points (self):
    bwp = self.df[self.df['water_point_condition'] =="broken"]

    self.brwp= bwp.groupby("communities_villages").size().reset_index()
    self.brwp= self.brwp.rename(columns = {0: 'broken_water_points'})
  
    self.water_points= pd.merge(self.wp_df,self.brwp)

    # broken water points and rank
    self.water_points['percent'] = (self.water_points['broken_water_points'] / 
                                                                        self.water_points['water_points_per_community'] *100)
    self.water_points['rank'] = self.water_points['percent'].rank(ascending=False).astype(int)
    self.water_points.sort_values(by='percent',inplace=True, ascending=False)
    print(self.water_points)

test=waterPoints(url)
test.functional_water_points()
test.wps_community()
test.broken_water_points()

